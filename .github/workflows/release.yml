name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.21'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        CGO_ENABLED=0 go build \
          -ldflags="-w -s -X main.version=${{ steps.version.outputs.VERSION }} -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          -o goagents-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} \
          cmd/goagents/main.go
    
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: goagents-${{ matrix.goos }}-${{ matrix.goarch }}
        path: goagents-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
          goagents/goagents
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deployments/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64

  release:
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create checksums
      run: |
        for dir in goagents-*; do
          if [ -d "$dir" ]; then
            cd "$dir"
            sha256sum * > ../checksums-$(basename "$dir").txt
            cd ..
          fi
        done
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        files: |
          goagents-*/goagents-*
          checksums-*.txt
        generate_release_notes: true
        body: |
          ## What's Changed
          
          This release includes:
          - Multi-platform binaries for Linux, macOS, and Windows
          - Docker images for amd64 and arm64 architectures
          - Kubernetes and Cloud Run deployment manifests
          
          ## Installation
          
          ### Binary Installation
          
          Download the appropriate binary for your platform from the assets below.
          
          ### Docker
          
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
          
          ### Kubernetes
          
          ```bash
          kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/kubernetes.yaml
          ```
          
          ## Verification
          
          All binaries are signed and checksums are provided for verification.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}