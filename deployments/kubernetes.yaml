apiVersion: v1
kind: Namespace
metadata:
  name: goagents
---
apiVersion: v1
kind: Secret
metadata:
  name: llm-credentials
  namespace: goagents
type: Opaque
stringData:
  anthropic-key: "your-anthropic-api-key"
  openai-key: "your-openai-api-key"
  google-key: "your-google-api-key"
  openai-org-id: "your-openai-org-id"
  google-project-id: "your-google-project-id"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: goagents-config
  namespace: goagents
data:
  config.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      timeout: 30s
      log_level: info
      metrics:
        enabled: true
        path: /metrics
        port: 9090
    
    providers:
      anthropic:
        api_key: "${ANTHROPIC_API_KEY}"
        timeout: 60s
      openai:
        api_key: "${OPENAI_API_KEY}"
        org_id: "${OPENAI_ORG_ID}"
        timeout: 60s
      gemini:
        api_key: "${GOOGLE_API_KEY}"
        project_id: "${GOOGLE_PROJECT_ID}"
        timeout: 60s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goagents
  namespace: goagents
  labels:
    app: goagents
spec:
  replicas: 2
  selector:
    matchLabels:
      app: goagents
  template:
    metadata:
      labels:
        app: goagents
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: goagents
        image: goagents:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: anthropic-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: openai-key
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: google-key
        - name: OPENAI_ORG_ID
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: openai-org-id
        - name: GOOGLE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: google-project-id
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: 256Mi
            cpu: 250m
          limits:
            memory: 512Mi
            cpu: 500m
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: goagents-config
      securityContext:
        fsGroup: 65534
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: goagents
  namespace: goagents
  labels:
    app: goagents
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: goagents
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goagents
  namespace: goagents
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - goagents.example.com
    secretName: goagents-tls
  rules:
  - host: goagents.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: goagents
            port:
              number: 8080
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: goagents-pdb
  namespace: goagents
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: goagents
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: goagents-hpa
  namespace: goagents
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: goagents
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80